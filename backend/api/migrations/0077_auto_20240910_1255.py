# Generated by Django 4.2.15 on 2024-09-10 12:55

from django.db import migrations
from api.utils.access.roles import default_roles


def create_default_roles(apps, schema_editor):
    Organisation = apps.get_model("api", "Organisation")
    Role = apps.get_model("api", "Role")
    OrganisationMember = apps.get_model("api", "OrganisationMember")

    # Create default roles for each organisation
    for organisation in Organisation.objects.all():
        for role_name, role_data in default_roles.items():
            role, created = Role.objects.get_or_create(
                name=role_name,
                organisation=organisation,
                is_default=True,
                defaults={"permissions": role_data["permissions"]},
            )

    # Update existing organisation members with the new role references
    for member in OrganisationMember.objects.all():
        if member.role.lower() == "owner":
            new_role = Role.objects.get(name="Owner", organisation=member.organisation)
        elif member.role.lower() == "admin":
            new_role = Role.objects.get(name="Admin", organisation=member.organisation)
        elif member.role.lower() == "dev":
            new_role = Role.objects.get(
                name="Developer", organisation=member.organisation
            )
        else:
            continue  # Skip any invalid or undefined roles

        member.organisation_role = new_role
        member.save()


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0076_role_organisationmember_organisation_role"),
    ]

    operations = [
        migrations.RunPython(create_default_roles),
    ]
