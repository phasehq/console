# Generated by Django 4.2.16 on 2025-07-18 08:12

from django.db import migrations
from django.utils import timezone


def deduplicate_env_keys(apps, schema_editor):
    EnvironmentKey = apps.get_model("api", "EnvironmentKey")

    now = timezone.now()

    # Deduplicate by (environment, user) where user is not null
    user_keys = EnvironmentKey.objects.filter(
        deleted_at__isnull=True,
        user__isnull=False,
    ).order_by("environment_id", "user_id", "-created_at")

    seen_user_pairs = set()

    for key in user_keys:
        pair = (key.environment_id, key.user_id)
        if pair in seen_user_pairs:
            # Soft delete duplicates
            key.deleted_at = now
            key.save(update_fields=["deleted_at"])
        else:
            seen_user_pairs.add(pair)

    # Deduplicate by (environment, service_account) where service_account is not null
    service_keys = EnvironmentKey.objects.filter(
        deleted_at__isnull=True,
        service_account__isnull=False,
    ).order_by("environment_id", "service_account_id", "-created_at")

    seen_service_pairs = set()

    for key in service_keys:
        pair = (key.environment_id, key.service_account_id)
        if pair in seen_service_pairs:
            key.deleted_at = now
            key.save(update_fields=["deleted_at"])
        else:
            seen_service_pairs.add(pair)


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0103_alter_environmentsync_service_and_more"),
    ]

    operations = [
        migrations.RunPython(
            deduplicate_env_keys, reverse_code=migrations.RunPython.noop
        ),
    ]
